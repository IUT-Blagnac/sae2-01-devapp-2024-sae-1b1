:toc: preamble
:toc-title: Table des Matières
= Cahier de Tests application DailyBank

image:../media/image_univ.jpg[image,width=97,height=137]

Université de Toulouse

IUT de Blagnac

Département Informatique

Cahier Recettes

SAE 2.01

image:../media/image_doc_tech.jpg[image,width=565,height=374]

____
*_Nom : BOULOUIHA Yassir, HANKI Wissal, DELAPAGNE Titouan, FIGUERAS
Clara_*
____

_Informatique 1^ière^ Année_

Version 0.1

A destination l'entreprise DailyBank

:toc:
:toc-title: Sommaire

:Entreprise: DailyBank
:Equipe:  

Créé pour :  Philippe Gaconnet et Yahn Formanczac


== I. Introduction
=== 1. Objet :
[.text-justify]
Ce document a été produit dans le cadre d'un projet d'élaboration d'une application bancaire pour la banque DailyBank, celle-ci souhaite développer une application JAVA-Oracle de gestion des comptes clients pour remplacer plusieurs outils obsolètes. Ce développement s’inscrit dans le cadre de la restructuration de ses services bancaires et l’application sera déployée dans les 100 agences que compte son réseau. 


== II. Pre-Requis :
[.text-justify]
L'exécution des tests spécifiés au chapitre suivant requiert :

* Une base de données installée (cf link:/S2-01_Developpement_Application/Doc_Technique.asciidoc[ici]).
* L'environnement de test tel que spécifié dans la partie "Environnement de test" de ce document.
* Les fiches de tests. *À vérifier*


=== 1. Éléments à tester :
[.text-justify]
Les éléments testés concernent les Use-Cases spécifiés dans la *documentation technique*.


=== 2. Environnement de test :
[.text-justify]
Ordinateur sous Windows ou OS équivalent avec l'utilisation de JAVA et du frameword Junit pour les tests.


== III Tests

=== 1. Fonctionnalités Guichetier V1

==== 1.1 Création de Compte

===== 1.1.1 Connexion à la base de données
|====

|Cas de test 4+|CDB-01
|Titre 4+|Connexion à la base de données
|Objectif 4+| Vérifier que la connexion à la base de données est établie

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|CDB.1 ^|Connexion à la base de données. ^|Connexion établie sans erreur. ^|- ^|OK

|====

===== 1.1.2 Création du Statement
|====

|Cas de test 4+|CS-01
|Titre 4+|Création du Statement
|Objectif 4+| Vérifier que le Statement est créé sans exception

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|CS.1 ^|Création du Statement. ^|Statement créé sans exception. ^|Connexion établie ^|OK

|====

===== 1.1.3 Exécution de la requête SELECT pour obtenir le nouvel ID
|====

|Cas de test 4+|ES-01
|Titre 4+|Exécution de la requête SELECT pour obtenir le nouvel ID
|Objectif 4+| Vérifier que la requête SELECT retourne le nouvel ID

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|ES.1 ^|Exécution de la requête SELECT pour obtenir le nouvel ID. ^|Le ResultSet contient la nouvelle valeur de l'ID. ^|Connexion établie. ^|OK

|====

===== 1.1.4 Vérification du contenu du ResultSet
|====

|Cas de test 4+|VRS-01
|Titre 4+|Vérification du contenu du ResultSet
|Objectif 4+| Vérifier que le ResultSet contient des données et le curseur est positionné

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|VRS.1 ^|Vérification du contenu du ResultSet. ^|Le ResultSet contient des données et le curseur est positionné. ^|Résultat de la requête SELECT. ^|OK

|====

===== 1.1.5 Construction et exécution de la requête INSERT
|====

|Cas de test 4+|CEI-01
|Titre 4+|Construction et exécution de la requête INSERT
|Objectif 4+| Vérifier que la requête INSERT est construite correctement et exécutée avec succès

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|CEI.1 ^|Construction de la requête INSERT. ^|Requête construite correctement. ^|Nouvel ID obtenu. ^|OK
^|CEI.2 ^|Exécution de la requête INSERT. ^|Insertion réussie dans la base de données. ^|Requête INSERT construite. ^|OK

|====

===== 1.1.6 Gestion des transactions
|====

|Cas de test 4+|GT-01
|Titre 4+|Commit de la transaction
|Objectif 4+| Vérifier que la transaction est commitée avec succès

|Cas de test 4+|GT-02
|Titre 4+|Rollback de la transaction
|Objectif 4+| Vérifier que la transaction est annulée en cas d'erreur

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|GT.1 ^|Commit de la transaction. ^|Transaction commitée avec succès. ^|Insertion réussie. ^|OK
^|GT.2 ^|Rollback de la transaction. ^|Transaction annulée en cas d'erreur. ^|Insertion échouée. ^|OK

|====

===== 1.1.7 Fermeture des ressources
|====

|Cas de test 4+|FR-01
|Titre 4+|Fermeture des ressources (connexion, statement, resultset)
|Objectif 4+| Vérifier que les ressources sont fermées sans exception

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|FR.1 ^|Fermeture des ressources (connexion, statement, resultset). ^|Ressources fermées sans exception. ^|Insertion réussie ou échouée. ^|OK

|====

=== 1.1.8 Commentaires
Si jamais un test échoue, un message d'erreur approprié sera affiché à l'utilisateur pour l'informer de la situation et lui demander de contacter l'administrateur de la base de données avec une erreur plus ou moins détaillée selon les situations qu'il aura à lui communiquer.



== IV. Exemples de Cas de test (ne pas mettre vos tests ici) :
=== 1. Fonctionnalités des guichetiers :
==== 1.1 Gestion des clients :

|====

>|Cas de test 4+|Test-01-01-01
>|Titre 4+|Création d'un nouveau client
>|Objectif 4+| Vérifier qu'il est possible de créer un nouveau client

5+|
^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|All_G_C.1 ^|Cliquer sur le bouton "Nouveau client". ^|La fenêtre de création des clients s'ouvre. ^| aucune ^|OK
^|All_G_C.2 ^|Compléter les champs spécifiés et valider. ^|Un nouveau client est créé. ^|aucune ^|OK


5+|

5+|Commentaire :
Compléter et si on ne valide pas, ...
|====


|====

>|Cas de test 4+|Test-01-01-02
>|Titre 4+|Modification d'un client
>|Objectif 4+| Vérifier qu'il est possible de modifier un client

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|All_G_C.3 ^|Cliquer sur le bouton "Modifier client". ^|La fenêtre de modification des données du clients s'ouvre. ^|Le client est sélectionné ^|OK
^|All_G_C.4 ^|Modifier les champs souhaités et confirmer. ^|Retour sur les informations du client. Le client est modifié. ^|La fenêtre modifier client est active ^|OK
^|All_G_C.5 ^|Modifier les champs souhaités et annuler. ^|Retour sur les informations du client. Le client est inchangé. ^|La fenêtre modifier client est active ^|OK

|====


==== 1.2 Gestion des comptes bancaires :


|====

>|Cas de test 4+|Test-01-02-03
>|Titre 4+|Consultation d'un compte
>|Objectif 4+| Vérifier qu'il est possible de consulter un compte

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|All_G_CB.1 ^|Cliquer sur le bouton "Comptes client". ^|La page des comptes du client s’affiche. ^|Un client actif est sélectionné ^|OK
^|All_G_CB.2 ^|Sélectionner le bouton "Voir opérations". ^|La page des opérations du compte s’affiche. ^|Un compte actif est sélectionné ^|OK
...

|====


==== 1.3 Gestion des opérations :

|====

>|Cas de test 4+|Test-01-03-01
>|Titre 4+|Débiter un compte
>|Objectif 4+| Vérifier qu'il est possible de débiter un compte

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|All_G_COP.1 ^|Cliquer sur le bouton "Enregistrer Débit". ^|La page des débit du compte s’affiche. ^| Un compte actif est sélectionné ^|OK
^|All_G_COP.2  ^|Rentrer un montant 50 dans le champ "Montant". ^|Le nouveau solde est +50euros. On a créé une nouvelle opération dans la liste des opérations avec le bon montant et la bonne date ^| Le compte sélectionné a un solde de +100 euros
 ^|OK
^|All_G_COP.3  ^|Rentrer un montant 150 dans le champ "Montant". ^|Le nouveau solde est -50 euros. On a créé une nouvelle opération dans la liste des opérations avec le bon montant et la bonne date ^| Le compte sélectionné a un solde de +100 euros, le découvert
autorisé est de -100 euros.
 ^|OK
^|All_G_COP.4  ^|Rentrer un montant 250 dans le champ "Montant". ^|Blocage ! + pop-up ^| Le compte sélectionné a un solde de +100 euros, le découvert
autorisé est de -100 euros.
 ^|OK
  
 

|====






=== 2. Fonctionnalités des chefs d'agence :
[.text-justify]
Les chefs d'agence ont accès aux mêmes fonctionnalités que les guichetiers, ainsi que d'autres qui leur sont réservées.

==== 2.1 Gestion des clients :

|====

>|Cas de test 4+|Test-02-01-01
>|Titre 4+|Rendre inactif un client
>|Objectif 4+| Vérifier qu'il est possible de rendre un client inactif

5+|

^|ID ^|Action ^|Comportement attendu ^|Pré-conditions ^|Résultat
^|C_G_C.1    ^|Sélectionner le bouton "Inactif" et confirmer. ^|...  ^|Un client actif est sélectionné ... ^| ...

5+|

5+|Commentaire : REVOIR AVEC
 *clôturés*.|

|====
